<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AMZKeyDescriptionLong" xml:space="preserve">
    <value>AWS "Secret Access Key" kan findes efter du har logget ind på din AWS konto. Denne værdi kan også angives gennem "ftp-password" indstillingen.</value>
  </data>
  <data name="AMZKeyDescriptionShort" xml:space="preserve">
    <value>AWS "Secret Access Key"</value>
  </data>
  <data name="AMZUserIDDescriptionLong" xml:space="preserve">
    <value>AWS "Access Key ID" kan findes efter du har logget ind på din AWS konto. Denne værdi kan også angives gennem "ftp-username" indstillingen.</value>
  </data>
  <data name="AMZUserIDDescriptionShort" xml:space="preserve">
    <value>AWS "Access Key ID"</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Denne destination kan læse og skrive data til Amazon S3. Tilladte formater er (subdomain type): "s3://bucketname.s3.amazonaws.com/prefix" eller "s3://aws_id:aws_key@bucketname.s3.amazonaws.com/prefix". 
Url-endelses typen godtages også: "s3://s3.amazonaws.com/bucketname/prefix".
Hvis servernavnet ikke er s3.amazonaws.com, antages det at der avendes vanity domæner, og bucket navnet forsøges fundet gennem CNAME oplysningerne.
Bemærk at hvis dit AWS ID eller Key indeholder ":", "/" eller "@" kan de ikke angives i url'en og skal så angives som separate indstillinger.</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Amazon S3 baseret</value>
  </data>
  <data name="FTPPasswordDescriptionLong" xml:space="preserve">
    <value>Kodeordet anvendt for at logge ind på serveren. Dette kan også angives via miljøvariablen "FTP_PASSWORD".</value>
  </data>
  <data name="FTPPasswordDescriptionShort" xml:space="preserve">
    <value>Angiver kodeordet der anvendes til at logge på serveren</value>
  </data>
  <data name="DescriptionFTPUsernameLong" xml:space="preserve">
    <value>Brugernavnet anvendt for at logge ind på serveren. Dette kan også angives via miljøvariablen "FTP_USERNAME".</value>
  </data>
  <data name="DescriptionFTPUsernameShort" xml:space="preserve">
    <value>Angiver brugernavnet der anvendes til at logge på serveren</value>
  </data>
  <data name="NoAMZKeyError" xml:space="preserve">
    <value>Der mangler en Amazon S3 hemmelig nøgle</value>
  </data>
  <data name="NoAMZUserIDError" xml:space="preserve">
    <value>Der mangler et Amazon S3 brugernavn</value>
  </data>
  <data name="S3EurobucketDescriptionLong" xml:space="preserve">
    <value>Denne indstilling bliver kun anvendt når der oprettes nye buckets. Hvis denne indstilling er sat bliver din bucket oprettet på en europæisk server. Denne indstilling tvinger "s3-use-new-style" indstillingen på. Amazon opkræver en smule mere for brug af europæiske buckets.</value>
  </data>
  <data name="S3EurobucketDescriptionShort" xml:space="preserve">
    <value>Brug en europæisk server</value>
  </data>
  <data name="S3NewStyleDescriptionLong" xml:space="preserve">
    <value>Angiv denne indstilling for at få bruge subdomain metoden istedet for den tidligere anvendte url-endelses metode. Se Amazon S3 dokumentationen for flere oplysninger.</value>
  </data>
  <data name="S3NewStyleDescriptionShort" xml:space="preserve">
    <value>Brug subdomain kaldetypen</value>
  </data>
  <data name="UnableToDecodeBucketnameError" xml:space="preserve">
    <value>Kunne ikke afgøre bucket navn for værten: {0}</value>
  </data>
  <data name="InvalidHostnameForSubdomainError" xml:space="preserve">
    <value>Bucket navnet "{0}", er ikke et gyldigt værtsnavn og kan ikke anvendes med subdomain url'er. Indstillingerne --{1} og --{2} skifter også subdomain url'er.</value>
  </data>
  <data name="S3UseRRSDescriptionLong" xml:space="preserve">
    <value>Denne indstilling aktiverer brugen af den specielle RRS header. Filer der gemmes med RRS har en større sandsynlighed for at forsvinde end filer der gemmes normal, men koster også mindre. Se den fulde beskrivelse her: http://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/</value>
  </data>
  <data name="S3UseRRSDescriptionShort" xml:space="preserve">
    <value>Benyt Reduced Redundancy Storage</value>
  </data>
</root>