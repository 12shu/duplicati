<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACe
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEH4AAVACAgGaAUkCAgGDkAABRgIBAX0BRwIBAX8BRwIBAX8BRwIBAX8BRwIB
        AX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BAwIBAQMMAAFGAgEBfQFH
        AgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFdAgMBzAFW
        AbQBcAH+AVQCAgGoiAABKwIBAT8BjAHFAfkB/wE4AdAC/wE2Ac8C/wE1Ac4C/wEyAc0C/wEwAcwC/wEt
        AcoC/wEsAckC/wEpAcgC/wEnAccC/wElAcYC/wEjAcUC/wFdAQcBCQHfCAABKwIBAT8BjAHFAfkB/wE4
        AdAC/wE2Ac8C/wE1Ac4C/wEyAc0C/wEwAcwC/wFSAcoBbgH/AXMB6QGVAf8BcQHpAZMB/wFrAeUBjAH/
        AWMB3gGDAf8BUAHOAWEB/wFSAdMBcwH/AVwCAwHIhAABKwIBAT8BagGuAfcB/wFXAd0C/wFNAdoC/wFL
        AdkC/wFJAdkC/wFIAdgC/wFGAdcC/wFEAdYC/wFBAdQC/wFAAdMC/wE+AdIC/wE7AdEC/wFeAgQB1wgA
        ASsCAQE/AWoBrgH3Af8BVwHdAv8BTQHaAv8BSwHZAv8BSQHZAv8BSAHYAv8BVQHOAXUB/wF6AeYBgQH/
        AYEB7gGIAf8BfwHwAYcB/wF0AekBgQH/AWQB3QF3Af8BVAHRAWUB/wFQAa8BXAH+AWEBBwEEAd6AAAEr
        AgEBPwGAAdQB/gH/AcYB9gH+Af8BYQHkAv8BYAHjAv8BXgHiAv8BXAHiAv8BWgHhAv8BWQHgAv8BVgHf
        Av8BVQHeAv8BUwHdAv8BUQHcAv8BWwICAb8BJgIBATcEAAErAgEBPwGAAdQB/gH/AcYB9gH+Af8BYQHk
        Av8BYAHjAv8BXgHiAv8BbwHbAfAB/wFTAcwBcgH/AW0B1gF/Af8BeAHjAYEB/wGAAewBhwH/AYEB8AGJ
        Af8BeAHrAYEB/wFoAeABfAH/AVsBtQFrAf4BYAIEAdiAAAErAgEBPwF9AdgC/wGHAcMB+QH/AXEB7AL/
        AW8B6wL/AW4B6wL/AW0B6gL/AWwB6gL/AWoB6QL/AWkB6AL/AWgB6AL/AWYB5wL/AWUB5gL/AV0CAgG/
        AV0BBwEJAd8EAAErAgEBPwF9AdgC/wGHAcMB+QH/AXEB7AL/AW8B6wL/AZMB5QHnAf8BnwH4AfUB/wFN
        AccBZgH/AWEB1gGBAf8BZgHcAYUB/wFsAeEBiwH/AW8B5gGQAf8BgQHwAYkB/wF6AfABkwH/AVQBRAEp
        AfeEAAErAgEBPwGBAd0C/wEvAaAB9wH/AYcB8QL/AYEB8AL/AYEB8AL/AYEB8AL/AYAB8AL/AX0B8AL/
        AXsB8AL/AXkB7wL/AXgB7wL/AXYB7wL/AV0CAgG/AV8CBAHXBAABKwIBAT8BgQHdAv8BLwGgAfcB/wGR
        Ae4B9wH/AbYB+AH1Af8BtAH9AfgB/wGvAfMB8QH/Aa4B/QH3Af8BqAH0AfEB/wGnAfcB8wH/AaYB+wH1
        Af8BagHOAYEB/wF6Ae4BmgH/AWcBDQELAeUBXwIEAdeEAAErAgEBPwGKAeYC/wE9Ac4B/gH/AekB+AH+
        Af8B4AH7Av8B3wH7Av8B3gH7Av8B1wH6Av8BmAH0Av8BlQH0Av8BkgH0Av8BjwH0Av8BjAH0Av8BXQIC
        Ab8BXQICAb8BKQIBATwBKwIBAT8BigHmAv8BPQHOAf4B/wHvAfgB/AH/AfEB/wH9Af8B7wL8Af8B7wH+
        Af0B/wHrAf4B/AH/AckB8gHxAf8ByAH9AfgB/wHDAfYB8wH/AXYB0AGBAf8BgQHaAZsB/wFkAgMB1QFd
        AgIBvwEpAgEBPIAAASsCAQE/AZwB7wL/AV4B5AL/AV4B5AL/AV4B5AL/AV4B5AL/AV4B5AL/AVIBygH7
        Af8B8gH9Af4B/wHoAfwC/wHnAfwC/wHmAfwC/wHmAfwC/wF2AhwB6wF2AhwB6wFhAQsBDQHkASsCAQE/
        AZwB7wL/AV4B5AL/AV4B5AL/AfABywHEA/8B9gH/Af4B9gHuAf8BuAHQAeoB/wH5Av0B/wH2Af4B/QH/
        AfQC+gH/AfUB/gH9Af8B9AH+Af0B/wHzAvoB/wF2AhwB6wFhAQsBDQHkgAABKwIBAT8BrwH5Av8BgAH0
        Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0Av8BgAH0
        Av8MAAErAgEBPwGvAfkC/wGAAfQC/wGAAfQC/wGBAfQB/gL/AvMD/wH8Af8B+wLbAf8B/AHxAe8B/wH7
        AfIB7QH/AfEB0wHRAf8C/gH2Af8B8gHeAdkB/wH+AecB3gH/AWcBCQEGAeKEAAErAgEBPwHGA/8BmgP/
        AZoD/wGaA/8B0AP/AeMD/wHjA/8B4wP/AeMD/wHjA/8B4wP/Ad4B/AH+Af8MAAErAgEBPwHGA/8BmgP/
        AZoD/wGaA/8B3wHeAdIF/wH9Ae8B8AH/A/4B/wH4AdkB2wH/AfoB7AHtAf8B+wL0Af8C/gH8Af8B9AHK
        AYUB/wFOAgIBj4QAASsCAQE/AekD/wHZA/8B2QP/AdkD/wFdAgMBzCgAASsCAQE/AekD/wHZA/8B2QP/
        AdkD/wFdAgMBzAF3ARkBFQHrBP8B/gL8Af8B+QHTAdUB/wH+AvwB/wH1Ad4B3wX/AfUB4wHXAf8BIwIB
        ATGIAAFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwEPAgEBEiwAAUcCAQF/AUcCAQF/AUcCAQF/AUcCAQF/
        AQ8CAQESBAAB/gHqAekB/wP+Af8B/AHhAeIB/wH+Av0G/wLzAf8BSgICAYjkAAEoAgEBOwH/Av0J/wHJ
        AZsBkAH8AQ4CAQER7AABXgIDAcoB/wL8Af8BWwICAbj4AAEhAgEBLpgAAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/8BAAP/AecEAAGAAQMBgAEDBQABAwEAAQEFAAEDBwABAQcAAQEBAAEB
        BQABAQEAAQEVAAEHAQABAQUAAQcBAAEBBAABAwH/AQABAQQAAYMB/wGCAQMEAAL/Af4BBwQAA/8BHwQA
        A/8BvwQACw==
</value>
  </data>
</root>