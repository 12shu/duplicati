<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACg
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEH4AAVACAgGaAUkCAgGDkAABRgIBAX0BRwIBAX8BRwIBAX8BRwIBAX8BRwIB
        AX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BRwIBAX8BAwIBAQMMAAFGAgEBfQFH
        AgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFHAgEBfwFdAgMBzAFV
        AbYBcAH+AVQCAgGoiAABKwIBAT8BjAHFAfkB/wE3AdAC/wE1Ac8C/wE0Ac4C/wExAc0C/wEvAcwC/wEs
        AcoC/wErAckC/wEoAcgC/wEmAccC/wEkAcYC/wEiAcUC/wFdAQgBCgHfCAABKwIBAT8BjAHFAfkB/wE3
        AdAC/wE1Ac8C/wE0Ac4C/wExAc0C/wEvAcwC/wFRAcoBbQH/AXIB6QGVAf8BcAHpAZMB/wFqAeUBjAH/
        AWIB3gGDAf8BTwHOAWAB/wFRAdMBcgH/AVwCAwHIhAABKwIBAT8BaQGuAfcB/wFWAd0C/wFMAdoC/wFK
        AdkC/wFIAdkC/wFHAdgC/wFFAdcC/wFDAdYC/wFAAdQC/wE/AdMC/wE9AdIC/wE6AdEC/wFeAQQBBgHX
        CAABKwIBAT8BaQGuAfcB/wFWAd0C/wFMAdoC/wFKAdkC/wFIAdkC/wFHAdgC/wFUAc4BdAH/AXkB5gGB
        Af8BgAHuAYgB/wF+AfABhwH/AXMB6QGBAf8BYwHdAXYB/wFTAdEBZAH/AU8BsQFcAf4BYQEIAQQB3oAA
        ASsCAQE/AX8B1AH+Af8BxgH2Af4B/wFgAeQC/wFfAeMC/wFdAeIC/wFbAeIC/wFZAeEC/wFYAeAC/wFV
        Ad8C/wFUAd4C/wFSAd0C/wFQAdwC/wFbAgIBvwEmAgEBNwQAASsCAQE/AX8B1AH+Af8BxgH2Af4B/wFg
        AeQC/wFfAeMC/wFdAeIC/wFuAdsB8AH/AVIBzAFxAf8BbAHWAX4B/wF3AeMBgQH/AX8B7AGHAf8BgAHw
        AYkB/wF3AesBgQH/AWcB4AF7Af8BWgG3AWsB/gFgAgQB2IAAASsCAQE/AXwB2AL/AYcBwwH5Af8BcAHs
        Av8BbgHrAv8BbQHrAv8BbAHqAv8BawHqAv8BaQHpAv8BaAHoAv8BZwHoAv8BZQHnAv8BZAHmAv8BXQIC
        Ab8BXQEIAQoB3wQAASsCAQE/AXwB2AL/AYcBwwH5Af8BcAHsAv8BbgHrAv8BkwHlAecB/wGfAfgB9QH/
        AUwBxwFlAf8BYAHWAYEB/wFlAdwBhQH/AWsB4QGLAf8BbgHmAZAB/wGBAfABiQH/AXkB8AGTAf8BUwFH
        ASoB94QAASsCAQE/AYEB3QL/AS4BoAH3Af8BhwHxAv8BgQHwAv8BgQHwAv8BgQHwAv8BfwHwAv8BfAHw
        Av8BegHwAv8BeAHvAv8BdwHvAv8BdQHvAv8BXQICAb8BXwIGAdcEAAErAgEBPwGBAd0C/wEuAaAB9wH/
        AZEB7gH3Af8BtgH4AfUB/wG0Af0B+AH/Aa8B8wHxAf8BrgH9AfcB/wGoAfQB8QH/AacB9wHzAf8BpgH7
        AfUB/wFpAc4BgQH/AXkB7gGaAf8BZwEOAQwB5QFfAgYB14QAASsCAQE/AYoB5gL/ATwBzgH+Af8B6QH4
        Af4B/wHgAfsC/wHfAfsC/wHeAfsC/wHXAfoC/wGYAfQC/wGVAfQC/wGSAfQC/wGPAfQC/wGMAfQC/wFd
        AgIBvwFdAgIBvwEpAgEBPAErAgEBPwGKAeYC/wE8Ac4B/gH/Ae8B+AH8Af8B8QH/Af0B/wHvAvwB/wHv
        Af4B/QH/AesB/gH8Af8ByQHyAfEB/wHIAf0B+AH/AcMB9gHzAf8BdQHQAYEB/wGBAdoBmwH/AWQCBAHV
        AV0CAgG/ASkCAQE8gAABKwIBAT8BnAHvAv8BXQHkAv8BXQHkAv8BXQHkAv8BXQHkAv8BXQHkAv8BUQHK
        AfsB/wHyAf0B/gH/AegB/AL/AecB/AL/AeYB/AL/AeYB/AL/AXcCIAHrAXcCIAHrAWABDAEQAeQBKwIB
        AT8BnAHvAv8BXQHkAv8BXQHkAv8B8AHLAcQD/wH2Af8B/gH2Ae4B/wG4AdAB6gH/AfkC/QH/AfYB/gH9
        Af8B9AL6Af8B9QH+Af0B/wH0Af4B/QH/AfMC+gH/AXcCIAHrAWABDAEQAeSAAAErAgEBPwGvAfkC/wF/
        AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/AfQC/wF/
        AfQC/wwAASsCAQE/Aa8B+QL/AX8B9AL/AX8B9AL/AYEB9AH+Av8C8wP/AfwB/wH7AtsB/wH8AfEB7wH/
        AfsB8gHtAf8B8QHTAdEB/wL+AfYB/wHyAd4B2QH/Af4B5wHeAf8BaQEKAQgB4oQAASsCAQE/AcYD/wGa
        A/8BmgP/AZoD/wHQA/8B4wP/AeMD/wHjA/8B4wP/AeMD/wHjA/8B3gH8Af4B/wwAASsCAQE/AcYD/wGa
        A/8BmgP/AZoD/wHfAd4B0gX/Af0B7wHwAf8D/gH/AfgB2QHbAf8B+gHsAe0B/wH7AvQB/wL+AfwB/wH0
        AcoBhQH/AU4CAgGPhAABKwIBAT8B6QP/AdkD/wHZA/8B2QP/AV0CAwHMKAABKwIBAT8B6QP/AdkD/wHZ
        A/8B2QP/AV0CAwHMAXsBHAEZAesE/wH+AvwB/wH5AdMB1QH/Af4C/AH/AfUB3gHfBf8B9QHjAdcB/wEj
        AgEBMYgAAUcCAQF/AUcCAQF/AUcCAQF/AUcCAQF/AQ8CAQESLAABRwIBAX8BRwIBAX8BRwIBAX8BRwIB
        AX8BDwIBARIEAAH+AeoB6QH/A/4B/wH8AeEB4gH/Af4C/Qb/AvMB/wFKAgIBiOQAASgCAQE7Af8C/Qn/
        AcsBnwGUAfwBDgIBARHsAAFeAgMBygH/AvwB/wFbAgIBuPgAASECAQEumAABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAA/8B5wQAAYABAwGAAQMFAAEDAQABAQUAAQMHAAEBBwABAQEA
        AQEFAAEBAQABARUAAQcBAAEBBQABBwEAAQEEAAEDAf8BAAEBBAABgwH/AYIBAwQAAv8B/gEHBAAD/wEf
        BAAD/wG/BAAL
</value>
  </data>
</root>