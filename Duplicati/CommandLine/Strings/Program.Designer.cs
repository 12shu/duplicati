//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplicati.CommandLine.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Program {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Program() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duplicati.CommandLine.Strings.Program", typeof(Program).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use control files.
        /// </summary>
        internal static string ControlFilesOptionLong {
            get {
                return ResourceManager.GetString("ControlFilesOptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this option is used with a backup operation, it is interpreted as a list of files to add to the filesets. When used with list or restore, it will list or restore the control files instead of the normal files..
        /// </summary>
        internal static string ControlFilesOptionShort {
            get {
                return ResourceManager.GetString("ControlFilesOptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command {0} needs at least one of the following options set: {1}.
        /// </summary>
        internal static string DeleteCommandNeedsOptions {
            get {
                return ResourceManager.GetString("DeleteCommandNeedsOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These filesets were deleted:.
        /// </summary>
        internal static string DeletedBackups {
            get {
                return ResourceManager.GetString("DeletedBackups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude files that match this filter. The special character * means any number of character, and the special character ? means any single character, use *.txt to include all files with a txt extension. Regular expressions are also supported and can be supplied by using hard braces, i.e. [.*\.txt]..
        /// </summary>
        internal static string ExcludeLong {
            get {
                return ResourceManager.GetString("ExcludeLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude files.
        /// </summary>
        internal static string ExcludeShort {
            get {
                return ResourceManager.GetString("ExcludeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read the parameters file &quot;{0}&quot;, reason: {1}.
        /// </summary>
        internal static string FailedToParseParametersFileError {
            get {
                return ResourceManager.GetString("FailedToParseParametersFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters cannot be specified on the commandline if filters are also present in the parameter file.
        /// </summary>
        internal static string FiltersCannotBeUsedWithFileError {
            get {
                return ResourceManager.GetString("FiltersCannotBeUsedWithFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported generic modules:.
        /// </summary>
        internal static string GenericModulesHeader {
            get {
                return ResourceManager.GetString("GenericModulesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include files that match this filter. The special character * means any number of character, and the special character ? means any single character, use *.txt to include all files with a txt extension. Regular expressions are also supported and can be supplied by using hard braces, i.e. [.*\.txt]..
        /// </summary>
        internal static string IncludeLong {
            get {
                return ResourceManager.GetString("IncludeLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include files.
        /// </summary>
        internal static string IncludeShort {
            get {
                return ResourceManager.GetString("IncludeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse &quot;{0}&quot; into a number.
        /// </summary>
        internal static string IntegerParseError {
            get {
                return ResourceManager.GetString("IntegerParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option --{0} was supplied, but it is reserved for internal use and may not be set on the commandline.
        /// </summary>
        internal static string InternalOptionUsedError {
            get {
                return ResourceManager.GetString("InternalOptionUsedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command not supported: {0}.
        /// </summary>
        internal static string InvalidCommandError {
            get {
                return ResourceManager.GetString("InvalidCommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module is loaded atomatically, use --disable-module to prevent this.
        /// </summary>
        internal static string ModuleIsLoadedAutomatically {
            get {
                return ResourceManager.GetString("ModuleIsLoadedAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module is not loaded atomatically, use --enable-module to load it.
        /// </summary>
        internal static string ModuleIsNotLoadedAutomatically {
            get {
                return ResourceManager.GetString("ModuleIsNotLoadedAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No filesets matched the criteria.
        /// </summary>
        internal static string NoFilesetsMatching {
            get {
                return ResourceManager.GetString("NoFilesetsMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option can be used to store some or all of the options given to the commandline client. The file must be a plain text file, UTF-8 encoding is preferred. Each line in the file should be of the format --option=value. The special options --source and --target can be used to override the localpath and the remote destination uri, respectively. The options in this file take precedence over the options provided on the commandline. You cannot specify filters in both the file and on the commandline..
        /// </summary>
        internal static string ParametersFileOptionLong {
            get {
                return ResourceManager.GetString("ParametersFileOptionLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to a file with parameters.
        /// </summary>
        internal static string ParametersFileOptionShort {
            get {
                return ResourceManager.GetString("ParametersFileOptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported backends:.
        /// </summary>
        internal static string SupportedBackendsHeader {
            get {
                return ResourceManager.GetString("SupportedBackendsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported compression modules:.
        /// </summary>
        internal static string SupportedCompressionModulesHeader {
            get {
                return ResourceManager.GetString("SupportedCompressionModulesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported encryption modules:.
        /// </summary>
        internal static string SupportedEncryptionModulesHeader {
            get {
                return ResourceManager.GetString("SupportedEncryptionModulesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported options:.
        /// </summary>
        internal static string SupportedOptionsHeader {
            get {
                return ResourceManager.GetString("SupportedOptionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse &quot;{0}&quot; into a time offset: {1}.
        /// </summary>
        internal static string TimeParseError {
            get {
                return ResourceManager.GetString("TimeParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured: {0}.
        /// </summary>
        internal static string UnhandledException {
            get {
                return ResourceManager.GetString("UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner error message is: {0}.
        /// </summary>
        internal static string UnhandledInnerException {
            get {
                return ResourceManager.GetString("UnhandledInnerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following filesets would be deleted:.
        /// </summary>
        internal static string WouldDeleteBackups {
            get {
                return ResourceManager.GetString("WouldDeleteBackups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} commands but expected {1}, commands: 
        ///{2}.
        /// </summary>
        internal static string WrongNumberOfCommandsError_v2 {
            get {
                return ResourceManager.GetString("WrongNumberOfCommandsError_v2", resourceCulture);
            }
        }
    }
}
